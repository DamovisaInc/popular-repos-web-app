on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      app-resource-group:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_REGISTRY_NAME:
        required: true

jobs:
  deploy_to_review:
    name: Deploy Review
    if: github.event_name == 'pull_request'
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    environment: 
      name: review-lab
      url: ${{ steps.review-web.outputs.webapp-url }}
    steps:
    - name: Azure login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Create deployment slot
      run: |
        az webapp deployment slot create --name ${{ inputs.app-name }} --resource-group ${{ inputs.app-resource-group }} --slot review-pr-${{ github.event.number }} --configuration-source ${{ inputs.app-name }}

    - name: Deploy popular repos
      uses: azure/webapps-deploy@v2
      id: review-web
      with:
        app-name: ${{ inputs.app-name }}
        images: '${{ secrets.AZURE_REGISTRY_NAME }}/${{ inputs.app-name }}:${{ github.event.pull_request.head.sha }}'
        slot-name: review-pr-${{ github.event.number }}

  deploy_to_staging:
    name: Deploy Staging
    if: github.event.ref == 'refs/heads/main'
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    environment: 
      name: staging
      url: ${{ steps.staging-web.outputs.webapp-url }}
    concurrency: staging
    steps:
    - name: Azure login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy popular repos
      uses: azure/webapps-deploy@v2
      id: staging-web
      with:
        app-name: ${{ inputs.app-name }}
        images: '${{ secrets.AZURE_REGISTRY_NAME }}/${{ inputs.app-name }}:${{ github.sha }}'
        slot-name: staging

  deploy_to_production:
    name: Deploy Production
    if: github.event.ref == 'refs/heads/main'
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://${{inputs.app-name}}.azurewebsites.net
    concurrency: production
    needs: deploy_to_staging
    steps:
    - name: Azure login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Swap staging to production
      run: |
        az webapp deployment slot swap --name ${{ inputs.app-name }} --resource-group ${{ inputs.app-resource-group }} --slot staging --target-slot production
